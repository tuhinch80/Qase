  "description": ""
  "homepage": "https://github.com/mendesbayout/Fetch-api-simple-forecast#readme",
  },
    "url": "https://github.com/mendesbayout/Fetch-api-simple-forecast/issues"
  "bugs": {
  },
    "url": "https://github.com/mendesbayout/Fetch-api-simple-forecast.git"
    "type": "git",
  "repository": {
  "devDependencies": {},
  },
    "prpl-server": "^1.4.0"
    "npm": "^6.14.5",
  "dependencies": {
  "license": "ISC",
  "author": "",
  },
    "test": "echo \"Error: no test specified\" && exit 1"
    "start": "node scripts.js",
  "scripts": {
  "main": "script.js",
  "version": "1.0.0",
  "name": "np",
{
PACKAGE JSON
npm init playwright@latest
helpdesk@globalmeet.com
npx playwright test
npx test
npx playwright test
module.exports = config
};
  ],
    ],
      },
        },
          },
            complete: true,
          run: {
          uploadAttachments: true,
          project: 'DEMO',      // Replace <DEMO> with your project code
          },
            token: '<playwright-app-token>',
          api: {
        testops: {
        debug: false,
        mode: 'testops',
      {
      'playwright-qase-reporter',
    [
    ['list'],
  reporter: [
  },
    video: 'retain-on-failure',
    screenshot: 'only-on-failure',
  use: {
const config = {
// playwright.config.js
test
}
  console.error(err);
} catch (err) {
  }
    fs.mkdirSync(test);
  if (!fs.existsSync(test)) {
try {
const test = '/Users/tchoudhary/test';
const fs = require('node:fs');
}
  console.error(err);
} catch (err) {
  }
    fs.mkdirSync(test);
  if (!fs.existsSync(test)) {
try {
const test = '/Users/tchoudhary/test';
const fs = require('node:fs');
fs.mkdir()
fs.mkdir(test)
fs.mkdir() test
}
  console.error(err);
} catch (err) {
  }
    fs.mkdirSync(folderName);
  if (!fs.existsSync(folderName)) {
try {
const folderName = '/Users/joe/test';
const fs = require('node:fs');